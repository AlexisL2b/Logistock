TYPES D'UTILISATEURS DANS L'ORDRE HIERARCHIQUE ET LEURS LOGIQUES:

1. Administrateur

2. Gestionnaire :
                1.  Dashboard avec analytique journaliÃ¨re (possibilitÃ©e de changer en vue hebdomadaire/mensuel/annuelle) 
                    ( nombre de commande passÃ©es aujourd'hui, nombre livraison en cours/traitÃ©es/annulÃ©es, nombre de livraison fournisseur reÃ§u)
3. Logisiticien :
                1.  EntrÃ©e en stock validÃ©e aprÃ¨s livraison d'un fournisseur et stockage en dÃ©pÃ´t.
                    Dans le dahsboards synthÃ¨se des livraison, avec bouton de validation qui aprÃ¨s actions
                    hydrateron la collection stock_log avec les informations correspondantes et ajouterons
                    ou non le produit dans la collection.
                2.  PrÃ©voir un composant analytique propre au mÃ©tiÃ© (combien de livraison traitÃ©es ect)
4. Acheteur:
                1.  Dashboard avec synthÃ¨se des commandes
                2.  Une section boutique
                3.  Une Section modification de profil

PREVOIR UN DASHBOARD POUR CHAQUE TYPE D'UTILISATEUR


@A FAIRE->  6. Ajouter un systÃ¨me de rÃ©cupÃ©ration de mot de passe

@A FAIRE->  3. ValiditÃ©e de champs des formulaires:
            dans chaque volet, implÃ©menter une validation des diffÃ©rents champs de formulaire.
@A FAIRE->  9. Revoir la logique de ma collection order_detail (Un champs quantitÃ© existe, imaginer un champ qui accueillera le json de toutes les produits commandÃ©s avec prix,quantitÃ©,PU HT/TTC, PTOTAL par produit  HT/TTC et PRIX TOTAL HT/TTC)

@A FAIRE->  10.Design et responsive

@A FAIRE->  4. Faire un composant qui accueillera les commande (table collaps mui);

@FAIT->  1. Gerer les conflicts entre produit/categorie ect.
            ex: Si un produit a une categorie "meuble", et que je supprime la categorie meuble gÃ©rer ce cas

@FAIT->     2. Ajouter des listes dÃ©roulante pour donner acces lors des modification/ajout aux diffÃ©rentes dÃ©pendance.
            ex: Pour un produit si je veux le modifier dans la section categorie, un liste dÃ©roulante sera prÃ©sente avec les categories disponibles dans ma collection



@FAIT->  5. Ajouter un systÃ¨me d'authentification

@FAIT->  7. Ajouter une logique de rÃ´le/accÃ¨s (voir pour ajouter une table)

@FAIT->  8. Ajouter une page de crÃ©ation de compte avec diffÃ©rentes validation sur les diffÃ©rents champs


@FAIT  11.CrÃ©er une vue acheteur avec:
                a. une logique de paniÃ©/commande
                b. un dashboard ou il peut modifiÃ© son profil, consultÃ© ses commandes en cours ou passÃ©e


@ A FAIRE-> Lorsque je supprime un role, crÃ©er une vue pour rediriger un utilisateur sans rÃ´le 

@ A FAIRE -> lorsque je me dÃ©connecte ( que je retourne dans http://localhost:5173/), et que je complete l'url par -user-dahsboard j'accede au composant et aÃ  un utilisateur pourquoi ?

POINT D'AMELIORATION:


Gestion des stockes dynamiques avec des quantitÃ© reservÃ© , disponible et total


Produit:

Ajouter une reference pour pouvoir recommander le mÃªme produit par exemple.



Shop : 
Utiliser le composant drawer pour le panier.
Utiliser le composant speed dial pour le menu burger








________________________________________________________________________


@ACEHTEUR:
1. COLLAPS TABLE COMMANDES:
    A. AJOUTER UNE LOGIQUE DE SORT SUR LES TABLES. âœ”
    B. DANS LES TABLES COLLAPS, AJOUTER UNE COLONNE REFERENCE, ET A LA PLACE D'AFFICHER ID PRODUIT ON AFFICHE LE NOM âœ”
    C.COLORER LES STATUTS (ValidÃ©e = Vert, ExpediÃ©e = Bleu, En Cours = Jaune, AnnulÃ©e = Rouge ) âœ”
2. CART:
    A. VIDER LE LOCALSTORAGE LORSQUE JE ME DECONNECTE.
    B. AFFICHER LES BONNES DONNEES DANS LA MODALE PANIER. âœ”

3. PROFILE:
    A. RENDRE MODIFIABLE DES INFORMATIONS DU PROFILE.
    B. COHERENCE D'AFFICHAGE DES INFORMATIONS.

4. PRODUIT:
    A. AJOUT DE FILTRE PAR CATEGORIE.  âœ” 
    B. AJOUT D'UNE RECHERCHE (PAR NOM OU REFERENCE) âœ”


@LOGISTICIAN:

1. PROFILE:
    A. AFFICHER LES INFORMATIONS DE PROFILE
    B. MODIFICATION D'INFORMATIONS 
    C. AJOUTER UNE LOGIQUE DE STAT
    
2. COMMANDES:
    2.1 EN ATTENTE
        A. DANS LE COLLAPS AJOUTER UNE COLONNE NOM DE PRODUIT  âœ”
    2.2 VALIDEE:
        A. AJOUTER UNE LOGIQUE DE SORT SUR LES COLONNES âœ”
        B. MODIFIER L'INPUT SELECT POUR QUIL AFFICHE BIEN SON SHRINK âœ”

    2.3 EXPEDIEE
        A. RECUPERER LES COMMANDES AVEC LES STATUT EXPEDIEE âœ”
        B. LES AFFICHER DANS UNE TABLEAU COLLAPS âœ”
        C. AJOUTER LES ADRESSES D'EXPEDITIONS ECT DANS LA COLLAPS âœ”
        D. AJOUTER UNE LOGIQUE DE SORT ET DE RECHERCHE PAR REF ET NOM âœ”

    
    2.4 ANNULEE
        A. AFFICHER TOUTES LES COMMANDES AVEC STATUT ANNULEEâœ”


@ADMIN:



gerestionnaire => crud + crÃ©ation d'acheteurs.
admin=> crÃ©ations de gestionnaire et de logisticiens.



ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©

Ajouter les diffÃ©rents patch/notifications Ã  la place d'alerte 



1. Faire fonctionner la modification de profile.
2. Mettre en place les crÃ©ations d'users dans les diffÃ©rentes vues.
3. Optimiser les requete.
4. Rendre responsive.
5. Faire tout le frontend

BUG:
Lorsque je m'inscrit, l'email est rentrer en lower dans mongo mais pas dans firebase.
Lenteure des requÃªtes


Suppression = alert confirmation.

Ã  quoi sert l'application?

Les label Ã  modifier :

Product=>Formulaire de crÃ©ation/modification=> QuantitÃ©_disponible pour QuantitÃ© disponible
Product=>Formulaire de crÃ©ation/modification=> QuantitÃ©_disponible pour QuantitÃ© disponible

LiÃ© un  stock avec un point de vente ( ajouter l'object id du point de vente dans le stock )

Ã  implÃ©menter:

Produit:

RÃ©aprovisionnement d'un produit dans un point de vente.
Pour Ã§a je doit lier un point de vente a un produit lors de la crÃ©ation.
ImplÃ©mementer une recherche par point de vente avec un liste dÃ©roulante.
Bouton rÃ©aprovisionner un produit sur la ligne d'un produit.
Produit>Point de vente>stock 
CrÃ©er de l'analytic  Ã  partir des commande:
Si selection de point de vente Ã  partir d'un dropdown
-Produit les plus vendues dans un point de vente ( RÃ©cupÃ©rer les produits Ã  partir du point de vente, rÃ©cupÃ©rer toutes les commande avec le statut validÃ© qui on un produit liÃ© au point de vente)
-Tableau des utilisateurs ayant le plus commandÃ©, ajoute un bouton pour afficher la liste des commande dÃ©tailÃ©e (RÃ©cupÃ©rer:  les orders a partir de l'id utilisateur>.populate les orders_details par rapport Ã  l'id orders. )

Si aucun point n'est selectionnÃ© afficher la mÃªme chose mais de maniÃ¨re inter-points de vente.


Logisticien:

Profile:
Afficher l'email

Orders:

Afficher les noms des utilisateurs ayant fait la commande.


implementer JOI pour la validation coter serveur.



Ajouter des stock_logs


