import { useEffect, useState } from "react"
import { Box, TextField } from "@mui/material"
import axiosInstance from "../../../../../../axiosConfig"
import EnhancedTableDependancies from "../../../../../reusable-ui/EnhancedTableDependancies"

export default function Products() {
  const [products, setProducts] = useState([])
  const [searchTerm, setSearchTerm] = useState("")

  // Fonction pour recharger les donn√©es
  const fetchProducts = () => {
    axiosInstance
      .get("/products") // URL relative correcte si axiosInstance est bien configur√©
      .then((response) => {
        setProducts(response.data) // Mise √† jour des Produits dans le state
      })
      .catch((error) => {
        console.error("Erreur lors de la r√©cup√©ration des Produits :", error)
      })
  }

  // Chargement initial des Produits
  useEffect(() => {
    fetchProducts()
  }, [])

  // Callback pour g√©rer les changements de donn√©es
  const handleDataChange = () => {
    fetchProducts() // Recharge les donn√©es lorsque le callback est d√©clench√©
  }

  const headerMapping = {
    supplier_id: "Fournisseur",
    categorie_id: "Categorie",
    quantite_stock: "Quantit√©",
    ref: "R√©f√©rence",
  }

  console.log("data: ", products)
  console.log("endpoints: ", ["/categories", "/suppliers"])
  console.log("headerMapping", headerMapping)

  // üîç Filtrage multi-crit√®res : Nom, ID, Cat√©gorie, Fournisseur, R√©f√©rence
  const filteredProducts = products.filter((product) => {
    const searchLower = searchTerm.toLowerCase()

    return (
      product.nom.toLowerCase().includes(searchLower) || // Nom du produit
      product._id.toLowerCase().includes(searchLower) || // ID du produit
      (product.categorie_id?.nom &&
        product.categorie_id.nom.toLowerCase().includes(searchLower)) || // Cat√©gorie
      (product.supplier_id?.nom &&
        product.supplier_id.nom.toLowerCase().includes(searchLower)) || // Fournisseur
      (product.ref && product.ref.toLowerCase().includes(searchLower)) // R√©f√©rence
    )
  })

  return (
    <Box>
      {/* üîç Champ de recherche multi-crit√®res */}
      <TextField
        label="Rechercher par Nom, ID, Cat√©gorie, Fournisseur, R√©f√©rence"
        variant="outlined"
        fullWidth
        margin="normal"
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
      />

      {/* Passe les produits filtr√©s √† EnhancedTableDependancies */}
      <EnhancedTableDependancies
        data={filteredProducts}
        coll={"products"}
        onDataChange={handleDataChange}
        endpoints={["/categories", "/suppliers"]}
        headerMapping={headerMapping}
      />
    </Box>
  )
}
