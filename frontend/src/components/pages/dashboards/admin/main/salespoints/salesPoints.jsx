import { useEffect, useState } from "react"
import { Box, TextField } from "@mui/material"
import axiosInstance from "../../../../../../axiosConfig"
import EnhancedTable from "../../../../../reusable-ui/EnhancedTable"

export default function SalesPoints() {
  const [salesPoints, setSalesPoints] = useState([])
  const [searchTerm, setSearchTerm] = useState("")

  // Fonction pour recharger les donn√©es
  const fetchSalesPoints = () => {
    axiosInstance
      .get("/sales_points") // URL correcte pour r√©cup√©rer les points de vente
      .then((response) => {
        setSalesPoints(response.data.data) // Mise √† jour du state avec les points de vente
      })
      .catch((error) => {
        console.error(
          "Erreur lors de la r√©cup√©ration des points de vente :",
          error
        )
      })
  }

  // Chargement initial des points de vente
  useEffect(() => {
    fetchSalesPoints()
  }, [])

  // Callback pour g√©rer les changements de donn√©es
  const handleDataChange = () => {
    fetchSalesPoints() // Recharge les donn√©es lorsqu'un changement est d√©tect√©
  }

  const headerMapping = {
    _id: "ID",
    nom: "Nom",
    adresse: "Adresse",
    telephone: "T√©l√©phone",
  }

  console.log("data: ", salesPoints)

  // üîç Filtrage multi-crit√®res : Nom, ID, Adresse, T√©l√©phone
  const filteredSalesPoints = salesPoints.filter((salesPoint) => {
    const searchLower = searchTerm.toLowerCase()

    return (
      salesPoint.nom.toLowerCase().includes(searchLower) || // Nom du point de vente
      salesPoint._id.toLowerCase().includes(searchLower) || // ID du point de vente
      (salesPoint.adresse &&
        salesPoint.adresse.toLowerCase().includes(searchLower)) || // Adresse
      (salesPoint.telephone && salesPoint.telephone.includes(searchLower)) // T√©l√©phone
    )
  })

  return (
    <Box>
      {/* üîç Champ de recherche multi-crit√®res */}
      <TextField
        label="Rechercher par Nom, ID, Adresse, T√©l√©phone"
        variant="outlined"
        fullWidth
        margin="normal"
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
      />

      {/* Passe les points de vente filtr√©s √† EnhancedTable */}
      <EnhancedTable
        data={filteredSalesPoints}
        coll={"sales_points"}
        onDataChange={handleDataChange}
        headerMapping={headerMapping}
      />
    </Box>
  )
}
